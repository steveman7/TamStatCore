 formatConfInt←{⍝cl←⍺,(0=≢⍺)/0.95        ⍝ If show operator,
 ⍝⍺ Confidence Level
 ⍝⍺ NameList
 ⍝⍵ Data
     ⎕IO←0 ⋄ ⎕ML←3
     NS←⎕NS''                            ⍝ Create namespace for output
     cl M NL←⍺ ⋄ G←1<≢NL                 ⍝ Level, Method, Name List
     cl,←(0=≢cl)/0.95                    ⍝ Default level to 95%
     cb←⊃,⍺⍺{C←cl∘.,⊂¨M                  ⍝ Various cases
         b←(twoSample ⍵)∧1=≢NL          ⍝ In two-sample case
         b:C ⍺⍺ confInt¨⊂⍵              ⍝ Apply to difference
         C∘.(⍺⍺{⍺ ⍺⍺ confInt ⍵})⍵}⍵    ⍝ Else apply individually
     pe←{G:⍺⍺¨⍵ ⋄ i←⍺⍺ 1 ¯1              ⍝ If not sdev or vari
         i∊¯1 0 3:-/⍺⍺¨⍵                ⍝ Use difference; else
         ÷/⍺⍺¨⍵}                         ⍝ Use ratio
     pt←M ⍺⍺{b←⍺⍺'Type'                 ⍝ If measure of position
         b≡'Quantity':⍺×mean ⍵           ⍝
         b≡'Position':⍺∘⍺⍺ pe ⍵
         ⍺⍺ pe ⍵}⍵                       ⍝ Point estimate
     M←{0≠↑↑0⍴⍵:⍵ ⋄                      ⍝ Blank out zeroes
         ⊂' '~⍨,'BG<N=ZZZZZZZ9>'⎕FMT ⍵}M ⍝ Format Population Size
     A S←XAxis,cb                        ⍝ Build axis
     I←↓⌊0.5+100×(A[0]-cb,(≢cb)⍴pt)÷-/A  ⍝ Find relative positons
     B←(⍳1⊃⍴S)∘between¨2↑¨I              ⍝ Include values between limits
     J←⊃B{B←⍺ ⋄ B[⍵]←2 3 4 ⋄ B}¨I⌊¯1+≢¨B ⍝ Find position on axis
     H←↓'K2Q<%>LI4 '⎕FMT cl              ⍝ Format conf level
     H←,{B←1<≢¨⍵ M NL
         ∨/B:↑∘.,/B/⍵ M(' ',¨NL)
         ⍵∘.,M∘.,' ',¨NL}H               ⍝ Append to group names
    ⍝H←,H∘.,M∘.,' ',¨NL                  ⍝ Append to group names

     FS←'<,>,M<->F10.',⍕0⌈5-⌈10⍟⌈/|A     ⍝ Build format string
     X←'(',(0 1↓FS ⎕FMT cb),')'          ⍝ Format limits
     X←(' '∨.≠X)/X                       ⍝ Remove blanks
     Z←(⊃H),X,' -()*'[J]                 ⍝ Assemble all values
     Z←Z⍪(2,-↑⌽⍴Z)↑S
     NS.Output←Z
     NS.Results←cb
     NS.PointEstimate←pt
     NS}

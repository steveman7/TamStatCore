 regress2←{
 ⍝⍺  [Optional] Name of response variable
 ⍝⍺⍺ transform
 ⍝⍵  Namespace
     ⍺←'' ⋄ ⎕IO←0 ⋄ ⎕ML←1
     FN←⊃3=⎕NC'⍺⍺'              ⍝ Is left operand a function?
     DB←⊃9=⎕NC'⍵'               ⍝ Is right argument a database?
     Int X←{¯2=≡⍵:(⊃⍵)(1↓⍵) ⋄ 1 ⍵}⍵        ⍝ Include intercept?
     FN⍱DB:Int leastSquares ⍺⍺,⍉↑,⊆X ⍝ Old method:  Y regress X
     FN∧~DB:⍺ ⍺⍺{U←2 ⍺⍺ 4       ⍝ Test operand
         U=4:             ⍝ Polynomial (⊥)
         U∊0 1:'Indicator'      ⍝ Indicator (= or ≠)
         (U=2)∧0=⍺⍺ 1:'Log'     ⍝ Log transform
         U=16:'b×x*a'           ⍝ Y = b×x*a
         U=0.5:'÷'              ⍝ Inverse transform
         U=2:'sqrt'             ⍝ Square root transform
         'arcsin'               ⍝ Arcsin transform
     }X
     FN∧⍺≡'':⍺⍺{NS←⍺⍺ ⍵        ⍝ If user operand, apply transformation
         V←⊆variables NS       ⍝ Get variable names
         V←⍕'Y',V~,¨'Y' 'Int'  ⍝ Put response variable first
         NS.Int leastSquares NS V}X ⍝ Do regression
     Y←,⍺⍺{2=⎕NC'⍺⍺':⍺⍺ ⋄ ⍵}⍺  ⍝ Get name of response variable
     V←⊆variables ⍵            ⍝ Get transformation variable names
     V←⍕Y,V~'Int'Y             ⍝ Put response variable first
     ⍵.∆←⍺⍺¨⍣FN⊢⍵⍎V            ⍝ Apply transformation function to all variables
     _←⍵⍎V,'←∆'                ⍝ Reassign transformed data function names
     _←⍵.(⎕EX'∆')              ⍝ Clean up garbage
     I←{0::1 ⋄ ⍵.Int}⍵         ⍝ Include intercept?
     I leastSquares ⍵ V        ⍝ Do regression

 }

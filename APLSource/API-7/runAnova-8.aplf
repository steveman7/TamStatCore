 Z←runAnova NS;C;D;Exp;alpha;q;K;M;LS;X;V;∆;MODEL;⎕PP;fn;TwoWay;Alias
 ⎕IO←0 ⋄ ⎕ML←3 ⋄ q←'''' ⋄ ⎕PP←5                                      
      ⍝:Trap 0                                                       
 alpha←NS.get'Sig'                                                   
 :If 'stats'≡NS.get'Var'      ⍝  Stats or data                       
     C←NS.get'Factor2'                                               
     :Select D←NS.get'Design'                                        
         ⍝ :If ''≡C ⋄ :OrIf C<2     ⍝ One-way Anova                  
     :Case 'oneWay'                                                  
         Exp←{z←'('q,(↑⍵),q                                          
             z,←'stats'(1↓⍵)')' ⋄ z}¨↓NS.Table                       
                 ⍝Exp←⍕alpha'report anova'Exp                        
         Exp←⍕alpha'report oneWay anova'Exp                          
         NS.Expr←deleteExcessBlanks Exp                              
         NS←alpha buildAnovaConfInt NS                               
         NS.Output←NS.UserSpace exErr NS.Expr                        
     :Case 'blocked'                                                 
         NS.Output←alpha report blocked anova 1 1↓NS.Table           
         M←{80=⎕DR ⍵:q,⍵,q ⋄ ⍕⍵}¨1 1↓NS.Table                        
         Exp←alpha'report blocked anova'(⍴M)'⍴'(,M)                  
         NS.Expr←deleteExcessBlanks Exp                              
     :Case 'latinSquare'                                             
         K←≢NS.Table                                                 
             ⍝LS X←⊂[0 1](2 1/K 2)⍴NS.Table                          
         LS X←⊂[0 1](2 1/K 2)⍴↑¨NS.Table                             
         NS.Output←alpha report LS latinSquare anova X               
         LS X←K{⍺ ⍺'⍴',Q,(,⍵),Q←q/⍨80=⎕DR ⍵}¨LS X                    
         Exp←alpha'report (',LS,') latinSquare anova'X               
         NS.Expr←deleteExcessBlanks Exp                              
     :Case 'factorial2k'                                             
         X←⍎∘⍕¨0 1↓NS.Table                                          
         Alias←{∧/⍵∊⎕A:⍵ ⋄ (⍵∊⎕A)⊂⍵}NS.get'LeftArg'                  
         NS.Output←alpha report Alias factorial2k anova X            
         Exp←alpha'report'(q,Alias,q)'factorial2k anova'(⍴X)'⍴',,X   
         NS.Expr←deleteExcessBlanks⍕Exp                              
     :Else                                                           
             ⍝ NS.Output←alpha report anova NS.Table                 
            ⍝  NS.Output←alpha report 2 factor anova 1 1↓NS.Table    
         NS.Output←alpha report blocked anova 1 1↓NS.Table           
         M←{80=⎕DR ⍵:q,⍵,q ⋄ ⍕⍵}¨1 1↓NS.Table                        
         Exp←alpha'report blocked anova'(⍴M)'⍴'(,M)                  
         NS.Expr←deleteExcessBlanks Exp                              
     :EndSelect                                                      
 :Else                                                               
     V←NS.get'Var' 'Factor1' 'Factor2' ⍝ Get Variable Names          
         ⍝ TwoWay←×≢' '~⍨2⊃V                                         
     TwoWay←'oneWay'≢NS.get'Design'                                  
         ⍝ fn←TwoWay⊃'oneWay' '2 factor'                             
     fn←NS.get'LeftArg' 'Design'                                     
     :If '.'∊↑V                                                      
         (∆ V)←↓⍉⊃{(⍵≠'.')⊂⍵}¨V            ⍝ Strip NameSpace         
         ∆←{0=≢⍵~' ':'#' ⋄ ⍵}↑∆                                      
                ⍝ Exp←'anova'∆ q V q                                 
         Exp←fn'anova'∆ q V q                                        
     :Else                                                           
         Exp←fn'anova'V                                              
     :EndIf                                                          
     :If ~TwoWay     ⍝ One-way Anova                                 
         NS←alpha buildAnovaConfInt NS                               
     :EndIf                                                          
     NS.Expr←deleteExcessBlanks⍕alpha'report'Exp                     
     MODEL←NS.UserSpace⍎⍕Exp                                         
          ⍝:If 9=⎕NC'MODEL'                                          
     :Trap 0                                                         
         NS.Means←MODEL.Means                                        
     :Else ⋄ NS.Means←NS.Table                                       
     :EndTrap                                                        
     NS.Output←NS.UserSpace⍎NS.Expr                                  
     :If ~TwoWay                    ⍝ One-Way Anova                  
         NS.Table←⍕¨1↓NS.Means                                       
         NS.ColTitles2←NS.Means[0;]                                  
         NS.CellTypes←(⍴NS.Table)⍴'T'                                
     :Else                                                           
         NS.Table←⍕¨NS.Means                                         
         NS.ColTitles2←' '                                           
         NS.CellTypes←(⍴NS.Means)⍴'T'                                
     :EndIf                                                          
 :EndIf                                                              
      ⍝:Else                                                         
     ⍝     NS.Output←'Error'                                         
     ⍝ :EndTrap                                                      
 Z←NS                                                                
